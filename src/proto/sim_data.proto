syntax = "proto3";

package flight_panel;

message SimData {
    AircraftInfo aircraft_info = 1;
    Avionics avionics = 2;
    AircraftMiscSystem aircraft_misc_data = 3;
    EngineData engine_data = 4;
    Instrument instruments = 5;
    AircraftControls aircraft_controls = 6;
    GameData game_data = 7;
    NavigationSystem nav_data = 8;
}

message AircraftInfo{
    // aircraft model.
    string model = 1;
    string call_sign = 2;
}

message Avionics {
    CourseDeviationIndicator cdi_1 = 1;
    CourseDeviationIndicator cdi_2 = 2;
    double adi_radial = 3;
    RadioChannel nav_radio_1 = 4;
    RadioChannel nav_radio_2 = 5;
    RadioChannel com_radio_1 = 6;
    RadioChannel com_radio_2 = 7;
    RadioChannel adf_radio = 8;
    string transponder_code = 9;
}

message RadioChannel {
    double active_freq = 1;
    double standby_freq = 2;
}

message CourseDeviationIndicator{
    enum Direction{
        DIR_UNKNOWN = 0;
        DIR_TO = 1;
        DIR_FROM = 2;
    }
    double obs_deg = 1;
    double radial_error = 2;
    double glide_slope_error = 3;
    Direction direction = 4;
    bool glisdeslope_flag = 5;
}

message AircraftMiscSystem {
    double battery_bus_volt = 1;
    double ambient_temp = 2;
}

message EngineData{
    double rpm = 1;
    double rpm_ambiemt_pct = 2;
    double engine_elapsed_time = 3;
    
    double fuel_left_level = 4;
    double fuel_right_level = 5;
}

message Instrument {
    // Altitude
    double indicated_altitude = 1;
    double kohlsman_setting_hg = 2;
    // feet per second.
    double vertical_speed = 3;

    // Attitude
    double pitch_angle = 4;
    double bank_angle = 5;

    // Speed
    double indicated_airspeed = 6;
    double true_airspeed = 7;
    double mach_speed = 8;
    // TI
    double turn_indicator_rate = 9;
    double turn_coordinator_ball = 10;
    // heading
    double heading_indicator_deg = 11;
}

message AircraftControls {
    double elevator_trim_indicator = 1;
    int32 flaps_count = 2;
    int32 flaps_pos = 3;

}

message GameData {
    // Whether the game is connected.
    bool connected = 1;
}

message NavigationSystem {
    enum NavSource {
        NAV_UNKNOWN = 0;
        NAV_SOURCE_1 = 1;
        NAV_SOURCE_2 = 2;
        NAV_FMS = 3;
    }
    NavSource active_nav_source = 1;
    HorizontalSituationIndicator hsi_1 = 2;
    HorizontalSituationIndicator hsi_2 = 3;
    double next_waypoint_distance = 19;
    string next_waypoint_name = 20;
    string last_waypoint_name = 21;
}

message HorizontalSituationIndicator {
    double course = 1;
}